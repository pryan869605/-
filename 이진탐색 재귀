#include <iostream>
#include <vector>
using namespace std;

int recursiveBinarySearch(const vector<int>& arr, int left, int right, int target) {
    if (left > right) {
        return -1; // 찾는 값이 배열에 없는 경우 -1 반환
    }

    int mid = left + (right - left) / 2;

    if (arr[mid] == target) {
        return mid; // 값을 찾은 경우 해당 인덱스를 반환
    } else if (arr[mid] < target) {
        return recursiveBinarySearch(arr, mid + 1, right, target); // 오른쪽 절반 탐색
    } else {
        return recursiveBinarySearch(arr, left, mid - 1, target); // 왼쪽 절반 탐색
    }
}

int main() {
    vector<int> arr = {2, 4, 6, 8, 10};
    int target = 6;

    int result = recursiveBinarySearch(arr, 0, arr.size() - 1, target);

    if (result != -1) {
        cout << "Target found at index " << result << endl;
    } else {
        cout << "Target not found in the array" << endl;
    }

    return 0;
}
